{"version":3,"sources":["components/Home.js","components/AddCustModal.js","components/EditCustModal.js","components/Customer.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","AddCustModal","props","snackbarClose","event","setState","snackbarOpen","state","snackbarmsg","handleSubmit","bind","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","name","target","value","age","address","this","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","id","action","IconButton","key","arial-label","color","onClick","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","Row","Col","sm","Form","onSubmit","Group","controlId","Label","Control","type","required","placeholder","Button","variant","Footer","onHide","EditCustModal","cusid","cusname","cusage","cusaddress","disabled","defaultValue","Customer","cust","addModalShow","editModalShow","refreshList","then","response","json","data","window","confirm","editModalClose","Table","striped","bordered","hover","map","cus","ButtonToolbar","deletecust","show","Navigation","Navbar","expand","Toggle","aria-controls","Collapse","Nav","to","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03df4d36.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"m-5 d-flex justify-content-left\">\r\n        <h3>This is the Home Page</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\nimport Snackbar from \"@material-ui/core/SnackBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// import Snackbar from \"@material-ui/core/Snackbar\";\r\nexport class AddCustModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbarOpen: false, snackbarmsg: \"\" };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  snackbarClose = event => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    // alert(event.target.name.value);\r\n    // alert(\r\n    //   // event.target.age.value\r\n    //   event.target.address.value\r\n    // );\r\n    fetch(\"https://localhost:44344/api/Customer1/Create\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/JSON\",\r\n        \"Content-Type\": \"application/JSON\"\r\n      },\r\n      body: JSON.stringify({\r\n        //id: null,\r\n        name: event.target.name.value,\r\n        age: event.target.age.value,\r\n        address: event.target.address.value\r\n      })\r\n    });\r\n    // alert(\"Added Successfully\");\r\n    // .then(res => res.json())\r\n    // .then(result => {\r\n    //   // alert(result);\r\n    this.setState({\r\n      snackbarOpen: true,\r\n      snackbarmsg: \"Added Successfully\"\r\n    });\r\n  }\r\n  // error => {\r\n  //   alert(\"Failed\");\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={1500}\r\n          onClose={this.snackbarClose}\r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              arial-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={this.snackbarClose}\r\n            >\r\n              x\r\n            </IconButton>\r\n          ]}\r\n        />\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Add Customer\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Form.Group controlId=\"name\">\r\n                    <Form.Label>CustomerName</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      required\r\n                      placeholder=\"CustomerName\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"age\">\r\n                    <Form.Label>Age</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"age\"\r\n                      required\r\n                      placeholder=\"Age\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"address\"\r\n                      required\r\n                      placeholder=\"Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Add Customer\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Button, Row, Col, Form } from \"react-bootstrap\";\r\nimport Snackbar from \"@material-ui/core/SnackBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nexport class EditCustModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { snackbarOpen: false, snackbarmsg: \"\" };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  snackbarClose = event => {\r\n    this.setState({ snackbarOpen: false });\r\n  };\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\"https://localhost:44344/api/Customer1/Edit/\" + this.props.cusid, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        Accept: \"application/JSON\",\r\n        \"Content-Type\": \"application/JSON\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: event.target.cusid.value,\r\n        name: event.target.cusname.value,\r\n        age: event.target.cusage.value,\r\n        address: event.target.cusaddress.value\r\n      })\r\n    });\r\n\r\n    this.setState({\r\n      snackbarOpen: true,\r\n      snackbarmsg: \"Updated Successfully\"\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={1500}\r\n          onClose={this.snackbarClose}\r\n          message={<span id=\"message-id\">{this.state.snackbarmsg}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              arial-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={this.snackbarClose}\r\n            >\r\n              x\r\n            </IconButton>\r\n          ]}\r\n        />\r\n        <Modal\r\n          {...this.props}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Edit Customer\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col sm={6}>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                  <Form.Group controlId=\"cusid\">\r\n                    <Form.Label>CustomerID</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"cusid\"\r\n                      disabled\r\n                      defaultValue={this.props.cusid}\r\n                      placeholder=\"CustomerID\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"cusname\">\r\n                    <Form.Label>CustomerName</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"cusname\"\r\n                      required\r\n                      defaultValue={this.props.cusname}\r\n                      placeholder=\"CustomerName\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"cusage\">\r\n                    <Form.Label>Age</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      name=\"cusage\"\r\n                      required\r\n                      defaultValue={this.props.cusage}\r\n                      placeholder=\"Age\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"cusaddress\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      name=\"cusaddress\"\r\n                      required\r\n                      defaultValue={this.props.cusaddress}\r\n                      placeholder=\"Address\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Edit Customer\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"danger\" onClick={this.props.onHide}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport { AddCustModal } from \"./AddCustModal\";\r\nimport { EditCustModal } from \"./EditCustModal\";\r\nexport class Customer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.setState({ cust: data });\r\n    this.state = { cust: [], addModalShow: false, editModalShow: false };\r\n  }\r\n  componentDidMount() {\r\n    this.refreshList();\r\n  }\r\n  refreshList() {\r\n    fetch(\"https://localhost:44344/api/Customer1\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ cust: data });\r\n      });\r\n  }\r\n  deletecust(cusid) {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      fetch(\"https://localhost:44344/api/Customer1/Del/\" + cusid, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Accept: \"application/JSON\",\r\n          \"Content-Type\": \"application/JSON\"\r\n        }\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    this.refreshList();\r\n  }\r\n  render() {\r\n    const { cust, cusid, cusname, cusage, cusaddress } = this.state;\r\n    let addModalClose = () => this.setState({ addModalShow: false });\r\n    let editModalClose = () => this.setState({ editModalShow: false });\r\n    return (\r\n      <div>\r\n        <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>CustomerID</th>\r\n              <th>CustomerName</th>\r\n              <th>AGE</th>\r\n              <th>ADDRESS</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cust.map(cus => (\r\n              <tr key={cus.id}>\r\n                <td>{cus.id}</td>\r\n                <td>{cus.name}</td>\r\n                <td>{cus.age}</td>\r\n                <td>{cus.address}</td>\r\n                <td>\r\n                  <ButtonToolbar>\r\n                    <Button\r\n                      className=\"mr-2\"\r\n                      variant=\"info\"\r\n                      onClick={() =>\r\n                        this.setState({\r\n                          editModalShow: true,\r\n                          cusid: cus.id,\r\n                          cusname: cus.name,\r\n                          cusage: cus.age,\r\n                          cusaddress: cus.address\r\n                        })\r\n                      }\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      className=\"mr-2\"\r\n                      variant=\"danger\"\r\n                      onClick={() => this.deletecust(cus.id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                    <EditCustModal\r\n                      show={this.state.editModalShow}\r\n                      onHide={editModalClose}\r\n                      cusid={cusid}\r\n                      cusname={cusname}\r\n                      cusage={cusage}\r\n                      cusaddress={cusaddress}\r\n                    />\r\n                    <EditCustModal\r\n                      show={this.state.editModalShow}\r\n                      onHide={editModalClose}\r\n                      cusid={cusid}\r\n                      cusname={cusname}\r\n                      cusage={cusage}\r\n                      cusaddress={cusaddress}\r\n                    />\r\n                  </ButtonToolbar>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <ButtonToolbar>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => this.setState({ addModalShow: true })}\r\n          >\r\n            Add Customer\r\n          </Button>\r\n          <AddCustModal show={this.state.addModalShow} onHide={addModalClose} />\r\n        </ButtonToolbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nexport class Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar color=\"black\" expand=\"lg\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav>\r\n            <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/\">\r\n              Home\r\n            </NavLink>\r\n            <NavLink className=\"d-inline p-2 bg-dark text-white\" to=\"/customer\">\r\n              Customers\r\n            </NavLink>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport { Home } from \"./components/Home\";\nimport { Customer } from \"./components/Customer\";\nimport { Navigation } from \"./components/Navigation\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <h3 className=\"m-3 d-flex justify-content-center\">\n          React js with web API Demo\n        </h3>\n        <h5 className=\"m-3 d-flex justify-content-center\">\n          Customer Management Portal\n        </h5>\n        <Navigation></Navigation>\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/customer\" component={Customer} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}